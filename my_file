pipeline {
    agent any

    environment {
        IMAGE_NAME     = "hello-abdul-nginx"
        CONTAINER_NAME = "my_app"
        IMAGE_TAG      = "${IMAGE_NAME}:${BUILD_NUMBER}"
    }

    options {
        skipDefaultCheckout(true)
        disableConcurrentBuilds()
        buildDiscarder(logRotator(numToKeepStr: '5'))
    }

    triggers {
        // This makes Jenkins listen to GitHub webhooks
        githubPush()
    }

    stages {
        stage('Checkout') {
            steps {
                git branch: 'main', url: 'https://github.com/khan-e-alam-007/hello-world-k8s.git'
            }
        }

        stage('Build Docker Image') {
            steps {
                sh "docker build -t ${IMAGE_TAG} ."
            }
        }

        stage('Stop Old Container') {
            steps {
                sh """
                  docker ps -q --filter name=${CONTAINER_NAME} | grep -q . && docker rm -f ${CONTAINER_NAME} || true
                """
            }
        }

        stage('Run New Container') {
            steps {
                sh "docker run -d -p 8081:80 --name ${CONTAINER_NAME} ${IMAGE_TAG}"
            }
        }
    }

    post {
        always {
            echo "Cleaning up old Docker images..."
            sh "docker image prune -af || true"
        }
    }
}

